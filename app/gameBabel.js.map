{"version":3,"sources":["../app-src/gameBabel.js"],"names":["canvas","document","createElement","ctx","getContext","width","height","body","appendChild","bgReady","bgImage","Image","onload","src","heroReady","heroImage","monsterRead","monsterImage","hero","speed","monster","monstersCaught","keysDown","window","addEventListener","e","keyCode","reset","x","y","Math","random","update","modifier","render","drawImage","fillStyle","font","textAlign","textBaseline","fillText","main","now","Date","delta","then","requestAnimationFrame","w","webkitRequestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame"],"mappings":"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","sourcesContent":["/** Cria o canvas */\r\nconst canvas = document.createElement('canvas')\r\nconst ctx = canvas.getContext('2d') // Contexto do canvas\r\ncanvas.width = 512\r\ncanvas.height = 480\r\ndocument.body.appendChild(canvas) // Adiciona um filho no body\r\n\r\n/** Background do jogo*/\r\nlet bgReady = false\r\nconst bgImage = new Image()\r\nbgImage.onload = function () { // Carrega a imagem do Background\r\n    bgReady = true // Quando o Background for carregado, ele está pronto para ser lido\r\n}\r\nbgImage.src = 'images/background.png' // Atribui o src da imagem do Background\r\n\r\n/** Imagem do Herói */\r\nlet heroReady = false\r\nconst heroImage = new Image()\r\nheroImage.onload = function () { // Carrega a imagem do Heroi\r\n    heroReady = true // Quando o Herói for carregado, ele está pronto para ser lido\r\n}\r\nheroImage.src = 'images/mario.png' // Atribui o src da imagem do Heroi\r\n\r\n/** Imagem do Monstro */\r\nlet monsterRead = false\r\nconst monsterImage = new Image()\r\nmonsterImage.onload = function () { // Carrega a imagem do Monstro\r\n    monsterRead = true // Quando o Monstro for carregado, ele está pronto para ser lido\r\n}\r\nmonsterImage.src = 'images/star.png' // Atribui o src da imagem do Monstro\r\n\r\n/** Objetos do jogo */\r\nconst hero = { // Objeto do Heroi\r\n    speed: 256 // Movimento em pixels por segundo\r\n}\r\nconst monster = {} // Objeto do Monstro\r\nlet monstersCaught = 0 // Contador dos monstros apanhados\r\n\r\n/** Capturando os eventos do controle do teclado */\r\nconst keysDown = {}\r\n\r\nwindow.addEventListener('keydown', function (e) { // Captura o evento de keyDown da tecla pressionada\r\n    // console.log(e)\r\n    keysDown[e.keyCode] = true // Adiciona a propriedade e.keyCode = true no objeto keysDown\r\n}, false)\r\n\r\nwindow.addEventListener('keyup', function (e) { // Captura o evento de keyDown da tecla pressionada\r\n    // console.log(e)\r\n    delete keysDown[e.keyCode] // Deleta a propriedade e.keyCode do objeto keysDown\r\n}, false)\r\n\r\n/** Reseta o jogo quando o jogador pega o monstro */\r\nconst reset = function () {\r\n    /** \r\n     * O Herói vai iniciar na metade da tela no eixo X e Y. \r\n    */\r\n    hero.x = canvas.width / 2\r\n    hero.y = canvas.height / 2\r\n\r\n    /**\r\n     * Posiciona o monstro randomicamente na tela .\r\n     * \r\n     * O tamanho do monstro 32px + (número entre 0 e 1 * (largura da tela - 64px))\r\n     * O tamanho do monstro 32px + (número entre 0 e 1 * (altura da tela - 64px))\r\n     * 64px é só para afastar um pouco o monstro da tela\r\n    */\r\n    monster.x = 32 + (Math.random() * (canvas.width - 64))\r\n    monster.y = 32 + (Math.random() * (canvas.height - 64))\r\n}\r\n\r\n/** Atualiza os objetos do jogo */\r\nconst update = function (modifier) {\r\n    if (38 in keysDown) { // seta para cima\r\n        hero.y -= hero.speed * modifier // posição Y: é a posição Y - (velocidade do heroi * 1000)\r\n    }\r\n    if (40 in keysDown) { // seta para baixo\r\n        hero.y += hero.speed * modifier // posição Y: é a posição Y + (velocidade do heroi * 1000)\r\n    }\r\n    if (37 in keysDown) { // seta para esquerda\r\n        hero.x -= hero.speed * modifier // posição X: é a posição X - (velocidade do heroi * 1000)\r\n    }\r\n    if (39 in keysDown) { // seta para direita\r\n        hero.x += hero.speed * modifier // posição X: é a posição X + (velocidade do heroi * 1000)\r\n    }\r\n\r\n    /** Colisão dos personagens */\r\n    if (\r\n        hero.x <= (monster.x + 32) // Se a posição y do herói enconstar <= (perto ou exatamente) no monstro E 32px\r\n        && monster.x <= (hero.x + 32)\r\n        && hero.y <= (monster.y + 32)\r\n        && monster.y <= (hero.y + 32)\r\n    ) {\r\n        ++monstersCaught // Aumenta contador de monstros pegos\r\n        reset() // Volta do começo\r\n    }\r\n}\r\n\r\n/** Renderiza tudo */\r\nconst render = function () {\r\n    if (bgReady) { // Se o backgraund foi carregado \r\n        ctx.drawImage(bgImage, 0, 0) // Desenha o backgraund na tela\r\n    }\r\n    if (heroReady) { // Se o herói foi carregado \r\n        ctx.drawImage(heroImage, hero.x, hero.y) // Desenha o herói na tela\r\n    }\r\n    if (monsterRead) { // Se o monstro foi carregado \r\n        ctx.drawImage(monsterImage, monster.x, monster.y) // Desenha o monstro na tela\r\n    }\r\n\r\n    /** Pontuação */\r\n    ctx.fillStyle = 'rgb(250, 250, 250)'\r\n    ctx.font = '24px Helvetica'\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n    ctx.fillText('Monstros pegos: ' + monstersCaught, 32, 32)\r\n}\r\n\r\n/** Controla o loop do jogo */\r\nconst main = function () {\r\n    const now = Date.now() // Data agora em milisegundos\r\n    const delta = now - then // delta = (agora em milisegundos - Então(then)) \r\n\r\n    update(delta / 1000)\r\n    render()\r\n\r\n    then = now\r\n\r\n    // Executa isso o mais breve possível\r\n    requestAnimationFrame(main) // Faz o trabalho de chamar o main toda vez que o jogo finalizar\r\n}\r\n\r\n// Suporte cross-browser para requestAnimationFrame\r\nconst w = window\r\nconst requestAnimationFrame = w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.msRequestAnimationFrame || w.mozRequestAnimationFrame\r\n\r\nlet then = Date.now() // Então(then), terá a data em milisegundo de quando o jogo iniciar \r\nreset()\r\nmain()\r\n"],"file":"gameBabel.js"}