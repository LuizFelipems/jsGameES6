{"version":3,"sources":["../app-src/gameBabel.js"],"names":["a","aa","ab","c","num","num2","toFixed","n1","n2","n3","nome","sNome","completo","document","write","length","charAt","substring","toLowerCase","toUpperCase"],"mappings":";;AAAA;;AAEA;;;;;;;;;;;;;AAaC,IAAIA,CAAC,GAAG,CAAR;AACA;;AACA,IAAIC,EAAE,GAAG,GAAT;AACA;AACI,MAAIC,EAAE,GAAG,GAAT,CADJ,CACiB;AAChB,C,CACF;AACA;;AAEC;AACD;AACA;;AAEA;;;;;AAKA;AACA;;AAEA;;;;;;;AAMC,IAAMC,CAAC,GAAG,CAAV,C,CACD;;AAEA;;;;;AAIC,IAAIC,GAAG,GAAG,QAAV;AACA,IAAIC,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAAX,C,CAA0B;AAC3B;;AAEC,IAAIC,EAAE,GAAG,CAAT;AACA,IAAIC,EAAE,GAAG,GAAT;AACA,IAAIC,EAAE,GAAG,IAAT,C,CACD;AACA;AACA;AACA;AACA;AACA;;AAGA;;;;;AAKA;AACA;;AACC,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,KAAK,GAAG,QAAZ;AACA,IAAIC,QAAQ,GAAGF,IAAI,GAAGC,KAAtB;AACAE,QAAQ,CAACC,KAAT,CAAeJ,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqB,kBAArB,GAA0CC,QAAQ,CAACG,MAAnD,GAA4D,MAA3E,E,CAAmF;;AACnFF,QAAQ,CAACC,KAAT,CAAeF,QAAQ,CAACI,MAAT,CAAgB,CAAhB,IAAqB,MAApC,E,CAA4C;;AAC5CH,QAAQ,CAACC,KAAT,CAAeF,QAAQ,CAACK,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,IAA2B,MAA1C,E,CAAkD;;AAClDJ,QAAQ,CAACC,KAAT,CAAeF,QAAQ,CAACM,WAAT,KAAyB,MAAxC,E,CAAgD;;AAChDL,QAAQ,CAACC,KAAT,CAAeF,QAAQ,CAACO,WAAT,KAAyB,MAAxC,E,CAAgD","sourcesContent":["// document.write(\"Fui compilado pelo Babel 7 \")\r\n\r\n/**\r\n * Variáveis\r\n * Você usa variáveis como nomes simbólicos para os valores em sua aplicação.\r\n * \r\n * Tipos de dados:\r\n * Boolean. true e false.\r\n * null. Uma palavra-chave que indica valor nulo.\r\n * undefined. Uma propriedade superior cujo valor é indefinido.\r\n * Number. 42 ou 3.14159.\r\n * String. \"Howdy\"\r\n * Symbol (novo em ECMAScript 6). Um tipo de dado cuja as instâncias são únicas e imutáveis.\r\n * Object. Objetos\r\n */\r\n var a = 1\r\n /** let - permite que você declare variáveis limitando seu escopo no bloco*/\r\n let aa = \"1\"\r\n {\r\n     let ab = \"2\" // ela respeita o escopo, só podendo ser acessada aqui dentro\r\n }\r\n//  document.write(aa)\r\n//  document.write(ab) // Uncaught ReferenceError: ab is not defined\r\n\r\n /** Convertendo strings para números */\r\n//  document.write(parseInt(aa))\r\n//  document.write(parseFloat(aa))\r\n\r\n/**\r\n * Hoisting (lançada para o topo)\r\n * É quando você utiliza a variável e declara depois, sem obter uma exceção.\r\n * Elas retornarão um valor undefined.\r\n */\r\n//  document.write(b)\r\n//  var b = 1\r\n\r\n/**\r\n * Constantes\r\n * Uma constante não pode alterar seu valor por meio de uma atribuição ou \r\n * ao ser declarada novamente enquanto o script é executado. \r\n * Deve ser inicializada com um valor.\r\n */\r\n const c = 1\r\n//  c = 2 // Erro de sintaxe, e c é somente leitura\r\n\r\n/**\r\n * Números\r\n * O objeto JavaScript Number é um objeto encapsulado que permite você trabalhar com valores numéricos.\r\n */\r\n let num = 1.123123\r\n let num2 = num.toFixed(2) // Retorna uma string representando o número na notação de ponto fixo.\r\n//  document.write(num2) \r\n\r\n let n1 = 2\r\n let n2 = '3'\r\n let n3 = 'ab'\r\n//  document.write(n1/n2) // Aqui o js faz a conversão inplicitamente\r\n//  document.write(n1+n2) // Aqui o js faz a concatenação de strings \r\n//  document.write(n1*n3) // Aqui o returna NaN\r\n//  document.write(n1 * Number(n2)) // Aqui convertemos a string para número\r\n//  document.write(n1 * +n2) // Aqui convertemos a string para número positivo\r\n//  document.write(n1 * -n2) // Aqui convertemos a string para número positivo\r\n\r\n\r\n/**\r\n * Strings\r\n * Strings são úteis para guardar dados que podem ser representados em forma de texto.\r\n * \r\n */\r\n//  let nome = 'Felipe \"Ok\"' // para imprimir as aspas no body\r\n//  let nome = 'Felipe \\\"Ok\\\" ' // para imprimir as aspas no body\r\n let nome = 'Luiz'\r\n let sNome = 'Felipe'\r\n let completo = nome + sNome\r\n document.write(nome + ' ' + sNome + ' Possui tamaho: ' + completo.length + '<br>') // retorna o tamanho da string\r\n document.write(completo.charAt(2) + '<br>') // Retorna o caracter da posição passada\r\n document.write(completo.substring(0, 3) + '<br>') // Retorna um trecho dessa string\r\n document.write(completo.toLowerCase() + '<br>') // Retorna a string em minúscula\r\n document.write(completo.toUpperCase() + '<br>') // Retorna a string em minúscula\r\n "],"file":"gameBabel.js"}